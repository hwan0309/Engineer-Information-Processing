4과 프로그래밍 언어

결합도 낮게 응집도 높게 좋은 설계도

결합도 정도
자료결합도< 스탬프 < 제어 < 외부 < 공통 < 내용 순으로 데이터가 제일 중요함
(내공외제스자)

응집도 정도
기능적 응집도 < 순차적 < 교환적 < 절차적 < 시간적 < 논리적 < 우연적
(우논시절교순기)

기억 클래스
자동변수Automatic, 레지스터변수 Register, 정적변수Static , 외부변수External

오버로딩
한클래스 내에서 같은 이름의 메소드를 사용하는것

오버라이딩
상속 관계 두 클래스의 상위 클래스에서 정의한 메소르를 하위 클래스에서 재정의 하는것

c언어 문자열 함수처리 
1.  strlen(s) - s의 길이를 구한다. 
2.  strcpy(s1, s2) - s2를 s1으로 복사한다. 
3.  strcat(s1, s2) - s1과 s2를 연결한다. 
4.  strrev(s)－s를 거꾸로 변환한다 

결합도
스탬프 결합도 - 두 모듈이 매개변수로 자료를 전달할 때, 자료구조 형태로 전달되어 이용될 때 데이터가 결합되어 있다고 한다.
내용 결합도 - 하나의 모듈이 직접적으로 다른 모듈의 내용을 참조할 때 두 모듈은 내용적으로 결합되어 있다고 한다.
공통 결합도 -  두 모듈이 동일한 전역 데이터를 접근한다면 공통결합 되어 있다고 한다.
결합도 -  두 모듈간의 상호작용, 또는 의존도 정도를 나타내는 것이다

Temporal Cohension(시간적 응집도)
Logical Cohension(논리적 응집도)
Coincidental Cohension(우연적 응집도)
Sequential Cohension(순차적 응집도)

c언어, python 변수명 작성규칙
첫 글자 숫자x,  영문자나 ' 로 시작, 대소문자 구분, 공백포함x, 명령아 사용x 

연산자 종류 및 순서
단항 연산자(+, -) > 산술 (*, /) > 시프트(<<, >>)> 관계(==, !=) > 
비트 > 논리 > 조건 > 할당 

!(부정) 
~ (1의 보수)
&(주소)
*(변수의 내용)
sizeof(변수, 저장소의 크기를 byte단위로 구함)
^(베타적 논리합)
|(논리 합)

스케줄링
FIFO
순서대로 스케줄 진행 

SJF(Shortest fob First)
제일 짧은시간 순서대로 진행

HRN
(대기시간 + 서비스받을시간 ) / 서비스받을시간

옥텟IP 속하는 class

A class: 0~126

B class: 128~191

C class: 192~223

D class : 224~239

E class: 240~255




