2과목 소프트웨어 개발

모듈화 종류
분할과 지배, 정보 은폐, 자료 추상화, 모듈의 독립성

구현단계의 절차
코딩계획 - 코딩 - 컴파일 - 테스트

프로세스 종류
Gradle, Jenkins, Makefile, Ant, Maven

DRM 기술요소
암호화, 키관리, 암호와 파일생성

디지털 콘텐츠의 사용권한 유형
랜더 퍼미션, 프랜스포트 퍼미션, 데리버리티브 퍼미션

소프트웨어 품질 측정 시 관점별 분류
사용자 관점 제품의 신뢰성, 효율성, 사용 용이성, 간결성
개발자 관점 검증 가능성, 유지보수성, 이식성, 무결성, 사용성

테스트 커버리지 테스트 수행 정도
구문 버러리지, 결정, 조건 변경, 다중조건

결함의 분류
시스템 결함, 기능결함, 문서결함

알고리즘
자연어, 의사코드, 순서도, 프로그래밍 언어 표현 가능

클린코드의 작성원칙
가독성, 단순성, 의존성배제, 중복성최소화, 추상화

검색시간 복잡도 
이진탐색트리가 제일 복잡하며 효율이 나쁨
이진탐색트리 > avl 트리 > 2-3트리 > 레드블랙트리

DRM Digit Rights Management  기술요소
암호화 기술, 암호화 피일 생성, 키 관리, 식별 기술, 저작권 표현, 정책 관리, 
크랙 방지, 인증, 인터페이스, 이벤트 보고, 사용 권한
원본을 안전하게 유통하기 위해 보안도 고려함

화이트박스 테스트(White-box testing)
소프트웨어 내부 구조와 구현을 고려하여 테스트 케이스를 설계하는 것으로, 
프로그램의 구조와 코드를 이해하는 것이 중요, 테스트 케이스는 프로그램의 
구조나 코드에 따라 결정

자료구조 분류
선형구조: 배열(Array), 레코드, 스택, 큐, 데크
비선형구조: 트리, 그래프
파일구조: 직접파일, 순차파일, 색인순차파일

인스펙션 과정
계획-사전교육-준비-인스펙션 회의-수정-후속조치 순

하양식 상향식 통합 모듈
하향식은 스텁 
상향식은 드라이버

화이트 박스
-기초 경로 테스트, 루프 테스트, 데이터 흐름 테스트, 조건 커버리지

블랙박스
-동등 분할, 경계값 분석, 오류 예측, 원인 결과 그래프, 비교 테스트

소프트웨어 형상관리 도구, 빌드 자동화 도구
빌드 자동화 도구 : Ant, Maven, Gradle
형상 관리 도구 : CVS, SVN, Git

NS차트  = 칠교놀이와 비슷
원, 사각형, 삼각형은 있지만 화살표는 없음

소프트웨어 형상관리 / 주요기능
개발 과정의 변경 사항을 관리하는 것
체크인, 체크아웃, 커밋

형상관리 도구
체크인, 체크아웃, 커밋 

테스트 오류찾음 - 디버깅 오류수정

인터페이스가 정상적인 작동 확인하는 도구

xUnit, STAF, FitNesse, NTAF, Selenium, watir

순환 복잡도 구하는 공식
화살표 - 노드수 +2
분기문 수 +1

정렬된 N개의 데이터를 처리하는데 소요되는 정렬 알고리즘
선택정렬 : O(n^2)
삽입정렬 : O(n^2)
버블정렬 : O(n^2)
퀵정렬 : O(nlogn)
합병정렬: O(Nlog2N)

정렬
선형 검색: 정렬 불필요
이진 검색: 정렬 필요

소프트웨어 테스트 오류 법칙
브룩스: 사람 늘려봐야 더 느려진다
보헴: 사람 늘려봐야 소용없다
파레토 법칙: 소프트웨어 20%에서 오류 80%발생
요르돈 법칙: 첫단추 잘 꿰어야

인터페이스 구현 검증 도구
STAF, Watir, Xunit

스택을 이용한 연산
재귀호출, 후위표현의 연산, 깊이 우선탐색

블랙박스 테스트 유형 
오류 예측, 동등 분할기법, 경계값 분석
