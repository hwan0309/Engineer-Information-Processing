
1과목 소프트웨어 설계

소프트웨어 개념 
프로그램 , 자료구조, 

시스템 개요와 기본요소
입력,처리,출력,제어,피드백 구성

재공학의 목표과정
분석 - 구성 - 역공학 - 이식

소프트웨어 생명주기 타당성 검토
개발계획 - 요구사항 분석 - 설계 - 구현 - 테스트 - 운용 - 유지보수

나선형 모형의 계발단계
계획수립 - 위험분석 - 개발 및 검증 - 고객평가

모델 테스트 계획 및 설계 (정적)
개발 - 설계 - 기능명세 분석 - 요구사항분석

테스트 수행 (동적)
단위 테스트 - 통합 테스트 - 시스템 테스트 - 인수 테스트
 
애자일 개발 방법론 종류
익스트림 프로그래밍, 스크럼, 린, DSDM, FDD

효과적인 프로젝트를 위한 3대요소
인적자원(사람), 문제인식(문제), 작업계획(프로세스)

현행시스템 파악 절차
시스템 구성파악 - 아키텍처 파악 - 시스템 하드웨어 현황 파악

현행 시스템의 분석항목
os종류와 버전, 패치일자, 백업 주기 분석

현행 시스템의 고려사항
가용성, 성능, 기술지원, 주변기기, 구축비용

SWEBOX에 따른 요구사항 개발 프로세스
요구사항 추출 - 요구사항 분석 - 요구사항 명세 - 요구사항 검증

요구사항 관리 도구의 필요성
요구사항 변경으로 비용 편익분석, 요구사항 변경의 추적, 요구사항 변경으로 영향평가

프로토타이핑 절차
요구사항 분석 - 프로토타입 설계 - 개발 - 고객평가 - 정제 - 생산 

럼바우 객체지향 분석기법 및 동적 모델링에 활용되는 다이어그램
객체 모델링, 동적 모델링, 기능 모델링
객체 다이어그램, 패키지, 자료흐름도

동적관점 
SEQUENCE, STATE, ACTIVITY DIAGRAM사용

다이어그램 유형
클래스CLASS, 객체OBJECT, 복합체COMPOSITE, 배치DEPLOYMENT, 컴포넌트COMPONENT
, 패키지PACKAGE 

행위 다이어그램
Use case, Activity, StateMachine, Sequence 

ui설계에 도움을 주는 도구들
와이어 프레임, 목업, 프로토타입, 스토리보드

소프트웨어 설계 

상위설계= 아키텍쳐 - 데이터 - 인터페이스정의 - 사용자 인터페이스 설계
하위설계= 모듈 - 자료구조 - 알고리즘

모듈 분할의 특징
설계의 질을 측정할 수 있고 유지보수가 쉽고 재사용이 쉽다

모듈 분할 시 영향을 주는 설계 형태
추상화, 모듈화. 정보은폐, 복잡도, 시스템구조

소프트웨어 architecture 시스템 품질속성
성능, 사용운용성, 보안성, 시험 용이성, 가용성, 변경 용이성, 사용성

소프트웨어 architecture 특징
간략성, 추상화, 가시성, 복잡도 관리 종류

소프트웨어 아키텍처 설계원리
단순성, 효율성, 분할계층화 , 추상화, 모듈화

복잡한 소프트웨어를 정의한 모델
Logcal view, Implementation, Prodess, Deployment, Use case

Factory Method 
객체를 생성하기 위한 인터페이스를 정의하여 어떠한 클래스가 인스턴스화 될지 결정하도록 하는것


시퀀스 다이어그램 구성항목
생명선, 실행, 메시지

디자인 패턴 중 행위적 패턴에 속하는것
커맨드, 옵저버, 상태

자료사전에서 반복을 의미하는 문구 
정의( = ), 연결( + ), 반복( {} ), 선택( [] ), 생략( () ), 주석( ** )

객체지향 설계 원칙 중 서브타입은 어디에서나 기반타입으로 교체할 수 있어야함을 의미하는 원칙
LSP Liskov subsitution principle

자료 흐름도 구성요소
process, data flow, data store, terminator

Extreme programming의 기본원리
pair programming, collective ownership, conitnuosus integration

DFD data flow diagram은
자료흐름 그래프 또는 버블 차트 라고함, 구조적 분석기법 이용, 화살표 원 사각형 직선으로 표시

Gof (gangs of four) 디자인 패턴 분류
생성패턴 구조, 행위
생성패턴 (팩추빌프싱)
구조패턴 (어브컴데퍼플프)
행위패턴 (책커인반중메옵 상전템방)

E,R다이어그램 사용 -----Coad와Yourdon방법 (이알)
객체, 동적 ,기능 모델 ---- 럼바우 방법 (객동기)
미시적 개발 프로세스와 거시적 ------ 부치 방법 (미시거시)
Use-case를 강조하여 ----- Jacobson방법 (유즈케이스)

정보공학 방법론에서 데이터 베이스 설계의 표현으로 사용되는 모델링 언어
Emtity-Relationship Diagram (er다이어그램)

구조적 정적 다이어그램 (클객컴배복패)
클래스, 객체, 컴포넌트, 배치, 복합구조, 패키지

행위 다이어그램 (활상유상커시)
활동, 상태머신, 유스케이스, 상호작용, 커뮤니케이션, 시퀀스

캡슐화(Encapuslation)
클래스 안에 서로 연관있는 속성과 기능들을 하나의 캡슐로 만들어 데이터를 외부로부터 보호하는 것

아키텍쳐 설계과정 순서 (목타적구검)
목표설정 - 시스템타입 결정 - 스타일 적용 및 커스터마이즈 - 서비스시템의 기능, 인터페이스 동작 작성 - 아키텍쳐 설계 검토

구조 다이어그램
클객복배컴패
행위 다이어그램
활상유상커시

자료 흐름도 요소별 표기 형태
Process - 원
Data Flow - 화살표
Data Store 직선
Terminator 사각형














 
